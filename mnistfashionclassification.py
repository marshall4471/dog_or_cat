# -*- coding: utf-8 -*-
"""mnistfashionclassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bkbxEu12u2eqexsnO4lROJFJMvFSZslu
"""

import tensorflow as tf

from tensorflow import keras

import numpy as np

import matplotlib.pyplot as plt

fashion_mnist = keras.datasets.fashion_mnist

(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

class_names = ['T-shirt', 'Pants', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt',
               'Sneaker', 'Bag', 'Ankle boot']

train_images.shape

train_labels, test_images.shape

plt.figure()
plt.imshow(train_images[0])
plt.colorbar()
plt.grid(False)
plt.show()

train_images = train_images / 255.0

test_images = test_images / 255.0

plt.figure(figsize=(10, 10))
for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(train_images[i],
              cmap=plt.cm.binary)
  plt.xlabel(class_names[train_labels[i]])
  plt.show()



model = keras.Sequential([
keras.layers.Flatten(input_shape= (28, 28)),
      keras.layers.Dense(128,
                         activation=tf.nn.relu),
                          keras.layers.Dense(10,
                                             activation=tf.nn.softmax)           
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=10)

test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test accuracy', test_acc)

probability_model = tf.keras.Sequential([model,
                                         tf.keras.layers.Softmax()])

predictions = probability_model.predict(test_images)

test_labels[0]

np.argmax(predictions[0])

model.save('clothing_pred.h5')